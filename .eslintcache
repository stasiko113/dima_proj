[{"/Users/enigma/WebstormProjects/react-electron/src/index.js":"1","/Users/enigma/WebstormProjects/react-electron/src/App.js":"2","/Users/enigma/WebstormProjects/react-electron/src/FilesViewer.js":"3","/Users/enigma/WebstormProjects/react-electron/src/Icons.js":"4","/Users/enigma/WebstormProjects/react-electron/src/components/Report/index.js":"5","/Users/enigma/WebstormProjects/react-electron/src/components/Home/index.js":"6","/Users/enigma/WebstormProjects/react-electron/src/components/Documents/index.js":"7","/Users/enigma/WebstormProjects/react-electron/src/components/Test/index.js":"8","/Users/enigma/WebstormProjects/react-electron/src/routes/routes.js":"9","/Users/enigma/WebstormProjects/react-electron/src/components/Test/components/collectInformationData/index.js":"10","/Users/enigma/WebstormProjects/react-electron/src/helpers/downloadCSV.helper.js":"11","/Users/enigma/WebstormProjects/react-electron/src/components/Test/components/collectMeansOfProtectionData/index.js":"12","/Users/enigma/WebstormProjects/react-electron/src/helpers/openPDF.helper.js":"13","/Users/enigma/WebstormProjects/react-electron/src/components/Test/components/collectQuestionnaireData/index.js":"14","/Users/enigma/WebstormProjects/react-electron/src/components/Test/components/collectComplianceOrdersData/index.js":"15","/Users/enigma/WebstormProjects/react-electron/src/components/Test/components/collectRequirementsData/index.js":"16","/Users/enigma/WebstormProjects/react-electron/src/helpers/checkFileExist.helper.js":"17","/Users/enigma/WebstormProjects/react-electron/src/helpers/readFile.helper.js":"18"},{"size":263,"mtime":1715283605615,"results":"19","hashOfConfig":"20"},{"size":626,"mtime":1715286797670,"results":"21","hashOfConfig":"20"},{"size":780,"mtime":1715251307478,"results":"22","hashOfConfig":"23"},{"size":1242,"mtime":1715251307478,"results":"24","hashOfConfig":"23"},{"size":2909,"mtime":1715512242824,"results":"25","hashOfConfig":"20"},{"size":470,"mtime":1715255261578,"results":"26","hashOfConfig":"20"},{"size":795,"mtime":1715292155039,"results":"27","hashOfConfig":"20"},{"size":2625,"mtime":1715376168527,"results":"28","hashOfConfig":"20"},{"size":1528,"mtime":1715373453097,"results":"29","hashOfConfig":"20"},{"size":2853,"mtime":1715507919954,"results":"30","hashOfConfig":"20"},{"size":2719,"mtime":1715516908711,"results":"31","hashOfConfig":"20"},{"size":4119,"mtime":1715507262682,"results":"32","hashOfConfig":"20"},{"size":326,"mtime":1715378054775,"results":"33","hashOfConfig":"20"},{"size":19212,"mtime":1715511177101,"results":"34","hashOfConfig":"20"},{"size":22698,"mtime":1715455367765,"results":"35","hashOfConfig":"20"},{"size":2550,"mtime":1715373607099,"results":"36","hashOfConfig":"20"},{"size":432,"mtime":1715508849369,"results":"37","hashOfConfig":"20"},{"size":723,"mtime":1715455116556,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bxwlem",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f9pijt",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/enigma/WebstormProjects/react-electron/src/index.js",[],"/Users/enigma/WebstormProjects/react-electron/src/App.js",[],"/Users/enigma/WebstormProjects/react-electron/src/FilesViewer.js",[],"/Users/enigma/WebstormProjects/react-electron/src/Icons.js",[],"/Users/enigma/WebstormProjects/react-electron/src/components/Report/index.js",["80","81"],"import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { toast, ToastContainer } from 'react-toastify'\nimport { checkIfFileExist } from '../../helpers/checkFileExist.helper'\nimport { readFile } from '../../helpers/readFile.helper'\nimport { createWordFile } from '../../helpers/downloadCSV.helper'\n\nconst Report = () => {\n\n  const [informationExist, setInformationExist] = useState(false)\n  const [meansOfProtectionExist, setMeansOfProtectionExist] = useState(false)\n  const [questionnaireExist, setMeansQuestionnaireExist] = useState(false)\n  const [complianceOrdersExist, setComplianceOrdersExist] = useState(false)\n  const [allExists, setAllExists] = useState(false)\n  const [problemsReport, setProblemsReport] = useState('')\n\n\n  checkIfFileExist('information_data.csv').then((exists) => {\n    if (exists) {\n      setInformationExist(true)\n    }\n  })\n  checkIfFileExist('means_of_protection_data.csv').then((exists) => {\n    if (exists) {\n      setMeansOfProtectionExist(true)\n    }\n  })\n  checkIfFileExist('questionnaire_data.csv').then((exists) => {\n    if (exists) {\n      setMeansQuestionnaireExist(true)\n    }\n  })\n  checkIfFileExist('compliance_data.csv').then((exists) => {\n    if (exists) {\n      setComplianceOrdersExist(true)\n    }\n  })\n\n\n  useEffect(() => {\n    if (informationExist && meansOfProtectionExist && questionnaireExist && complianceOrdersExist) {\n      setAllExists(true)\n    }\n  }, [informationExist, meansOfProtectionExist, questionnaireExist, complianceOrdersExist])\n\n\n  const generateReport = async () => {\n    if (!allExists) {\n      toast.error('Вы прошли не все тесты')\n      return;\n    }\n\n    let report = '';\n\n    try {\n      const questionnaireData = await readFile('questionnaire_data.csv');\n      report += `${questionnaireData}\\n`;\n\n      const meansOfProtectionData = await readFile('means_of_protection_data.csv');\n      report += `${meansOfProtectionData}\\n`;\n\n      const complianceData = await readFile('compliance_data.csv');\n      report += `${complianceData}\\n`;\n\n      // const informationData = await readFile('information_data.csv');\n      // report += `${informationData}\\n`;\n\n      setProblemsReport(report);\n      createWordFile(['№', 'Наименование вопроса', 'Рекомендация', 'Примечание'], report.split('\\n'), 'report.docx').then(result => {\n        console.log(result); // You might want to handle the result accordingly\n      });\n    } catch (error) {\n      console.error('Error generating report:', error);\n    }\n  }\n\n\n  return (\n    <div>\n      <h1>Формирование отчета</h1>\n      <ul className=\"test-menu\">\n        <li className=\"test-menu-item\" onClick={() => generateReport()}>\n          <span>Сформировать отчет</span>\n        </li>\n      </ul>\n      <ToastContainer/>\n    </div>\n  );\n}\n\nexport default Report;","/Users/enigma/WebstormProjects/react-electron/src/components/Home/index.js",[],"/Users/enigma/WebstormProjects/react-electron/src/components/Documents/index.js",["82"],"// Documents.js\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { PDFViewer } from '../../helpers/openPDF.helper';\nimport './styles.css'\n\nconst Documents = () => {\n  const openPDF = (pdfPath) => {\n    PDFViewer(pdfPath);\n  };\n\n  return (\n    <div>\n      <h1>Просмотр документов</h1>\n      <ul className=\"document-list\">\n        <li className=\"document-item\" onClick={() => openPDF('documents/66 Приказ.pdf')}>\n          <span>66 приказ</span>\n        </li>\n        <li className=\"document-item\" onClick={() => openPDF('documents/2023 - 130 Приказ ОАЦ 10 страничка.pdf')}>\n          <span>2023 - 130 Приказ ОАЦ 10 страничка</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Documents;\n","/Users/enigma/WebstormProjects/react-electron/src/components/Test/index.js",[],"/Users/enigma/WebstormProjects/react-electron/src/routes/routes.js",[],"/Users/enigma/WebstormProjects/react-electron/src/components/Test/components/collectInformationData/index.js",[],"/Users/enigma/WebstormProjects/react-electron/src/helpers/downloadCSV.helper.js",[],"/Users/enigma/WebstormProjects/react-electron/src/components/Test/components/collectMeansOfProtectionData/index.js",[],"/Users/enigma/WebstormProjects/react-electron/src/helpers/openPDF.helper.js",["83","84"],"import React, { useState } from 'react';\nconst { ipcRenderer } = window.require('electron');\n\nexport const PDFViewer = (pdfPath) => {\n  ipcRenderer.send('request-user-data-path', pdfPath);\n};\n\nipcRenderer.on('user-data-path', (event, userDataPath, pdfPath) => {\n  ipcRenderer.send('open-pdf-file', pdfPath, userDataPath);\n});\n","/Users/enigma/WebstormProjects/react-electron/src/components/Test/components/collectQuestionnaireData/index.js",["85"],"import React, { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { createWordFile, downloadCsv } from '../../../../helpers/downloadCSV.helper'\n\nconst headers = ['№', 'Наименование вопроса', 'Закрепление в ЛНПА', 'Наличие практического выполнения', 'Примечание']\n\nconst reportHeaders = ['№', 'Наименование вопроса', 'Рекомендация', 'Премичание']\n\n\nconst initialPreferencesRows = [\n  { question: 'Есть ли СКУД (класс ИС)', lnpa: '', practical: '', note: '' },\n  { question: 'Есть ли документооборот (класс ИС )', lnpa: '', practical: '', note: '' },\n  { question: 'Есть ли видеонаблюдение (класс ИС)', lnpa: '', practical: '', note: '' },\n  { question: 'Есть ли система пожарной безопасности (класс ИС)', lnpa: '', practical: '', note: '' },\n  { question: 'Есть ли система охранной сигнализации (класс ИС)', lnpa: '', practical: '', note: '' },\n  { question: 'Перечень ИС (акты отнесения)', lnpa: '', practical: '', note: '' },\n  { question: 'Физические границы', lnpa: '', practical: '', note: '' },\n  { question: 'Каналы связи (линии сети Интернет)', lnpa: '', practical: '', note: '' },\n  { question: 'Логические границы', lnpa: '', practical: '', note: '' },\n  {\n    question: 'Есть ли сервисы, которые работают по отдельным каналам связи (перечислить) какое шифрование используется (tls, https, криптография и тд.) ',\n    lnpa: '',\n    practical: '',\n    note: ''\n  },\n  { question: 'Куда передается информация ограниченного распространения', lnpa: '', practical: '', note: '' },\n  { question: 'Внешние взаимодействия (какого типа обрабатывается информация)', lnpa: '', practical: '', note: '' },\n];\n\nconst initialReliabilityRequirementsRows = [\n  {\n    question: 'Своевременное обновление программных СрЗИ; (актуальные антивирусные базы? на рабочих станциях межсетевых экранах (если используются не лицензированные или попавшие под санкции, то «нет»)). ',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n  {\n    question: 'Производится ли мониторинг состояния оборудования и каналов передачи данных; (Zabbix и т.д.)',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n  { question: 'Производится ли использование средств резервного копирования', lnpa: false, practical: false, note: '' },\n  {\n    question: 'Предварительного обучения пользователей и обслуживающего персонала; проводятся ли повышения квалификации сотрудников (сразу после вступления на должность и в течении работы)',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n]\n\nconst initialRequirementsRows = [\n  {\n    question: 'Серверного и сетевое оборудования (физические сервера, СХД, ОС серверов, маршрутизаторы, коммутаторы, каналы связи); Кто администрирует и обслуживает?',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n  {\n    question: 'Системы виртуализации (гипервизор, ОС виртуальных серверов, резервирование виртуальных серверов); Кто администрирует и обслуживает?', lnpa: false, practical: false, note: ''\n  },\n  {\n    question: 'СрЗИ (межсетевые экраны, средства канального шифрования, антивирусные средства и т.д.); Кто администрирует и обслуживает?', lnpa: false, practical: false, note: ''\n  },\n  {\n    question: 'Прикладного ПО (СУБД, сервера микросервисов, WEB-сервера, инсталляция ПО); Кто администрирует и обслуживает?', lnpa: false, practical: false, note: ''\n  },\n  {\n    question: 'Системного ПО (администрирование ОС); Кто администрирует и обслуживает?',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n  {\n    question: 'Внешнего (резервного) хранилища (аутсорс). Кто администрирует и обслуживает?', lnpa: false, practical: false, note: ''\n  },\n  {\n    question: 'Централизованную автоматическую инсталляцию клиентского ПО на рабочих местах пользователей и администраторов; Кем производится?',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n  {\n    question: 'Централизованное автоматическое обновление вирусных сигнатур на рабочих местах пользователей и администраторов; Кем производится?',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n  {\n    question: 'Администрирование всех антивирусных продуктов. Кем производится?', lnpa: false, practical: false, note: '',\n  },\n  {\n    question: 'Отчеты по проделанным работам (Антивирусное ПО, по расследованию вредоносного ПО, по событиям ИБ в журналах событий связанных с инцидентами ИБ (пароли, блокирование учетных записей и тд.)',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n];\n\nconst initialProtectionPreferencesRows = [\n  {\n    question: 'Ведется ли журнал, в котором регистрируются события, связанные с изменениями и ремонтом технических средств?',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n  {\n    question: 'Проводится ли периодическая инвентаризация технических средств ЛВС и СрЗИ?',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n  {\n    question: 'Инвентарная опись активов проводится с использованием автоматизированных средств?',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n  {\n    question: 'Реальный состав технических средств и СрЗИ соответствует составу, приведенному в эксплуатационной документации;',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n  {\n    question: 'Определен ли и соблюдается порядок безопасного списания или повторного использование оборудования, предусматривающий надежное удаление защищаемой информации с использованием специальных средств и утилит без возможности ее последующего восстановления?',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n];\n\nconst initialFunctionPreferencesRows = [\n  {\n    question: 'Осуществляется ли Отключение или удаление не актуальных учетных записей.',\n    lnpa: '',\n    practical: '',\n    note: ''\n  },\n  {\n    question: 'Задокументирован ли перечень событий ИБ, подлежащих регистрации, задан ли в настройках средств сбора событий? (сертифицированные МЭ, СКЗИ, антивирусное ПО и т.д.).',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n  {\n    question: 'Осуществляется ли резервное копирование записей журналов, встроенных в ОС, прикладное ПО, систему управления БД, средства виртуализации, активное сетевое оборудование и СрЗИ, в том числе на носители информации или иные сетевые хранилища?',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n  {\n    question: 'Выполняется ли оперативный аудит событий ИБ, полученных с помощью журналов, встроенных в ОС, прикладное ПО, систему управления БД, средства виртуализации, активное сетевое оборудование и СрЗИ) в рамках своих должностных обязанностей с установленной периодичностью (чем установлена?).',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n  {\n    question: 'Осуществляется ли синхронизации времени (NTP-сервер), который будет выполнять синхронизацию с belgim.by или средствами приемника GPS/GLONASS для всех средств автоматизации?',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n  {\n    question: 'Имеется ли Перечень ПО, разрешенного к использованию в составе ЛВС и его СЗИ?',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n  {\n    question: 'Зафиксирован ли перечень объектов, подлежащих резервному копированию, документально? ',\n    lnpa: false,\n    practical: false,\n    note: ''\n  },\n];\n\nconst CollectQuestionnaireData = () => {\n  const [preferencesRows, setPreferencesRows] = useState(initialPreferencesRows);\n  const [requirementsRows, setRequirementsRows] = useState(initialRequirementsRows);\n  const [preferencesProtectionRows, setProtectionPreferencesRows] = useState(initialProtectionPreferencesRows);\n  const [preferencesFunctionsRows, setProtectionFunctionsRows] = useState(initialFunctionPreferencesRows);\n  const [reliabilityRequirementsRows, setReliabilityRequirementsRows] = useState(initialReliabilityRequirementsRows);\n\n\n  const handleChange = (index, column, value, state, setState) => {\n    const newRows = [...state];\n    newRows[index][column] = value;\n    setState(newRows);\n  };\n\n  const createReport = () => {\n    const data = [...preferencesRows, ...requirementsRows, ...preferencesProtectionRows, ...preferencesFunctionsRows, ...reliabilityRequirementsRows];\n    const recomendationsData = data.filter(elem => (!elem.lnpa && !elem.practical) || (!elem.lnpa && elem.practical) || (elem.lnpa && !elem.practical) ).map((elem, index) => ({ number: `${index + 1}`, question: elem.question, recomendation: '', note: elem.note }))\n    downloadCsv(reportHeaders, recomendationsData, 'questionnaire_data.csv').then(data => {\n      return true;\n    })\n  }\n\n  return (\n    <div className=\"csv-table-container full-width-table\">\n      <div className=\"csv-table-wrapper\">\n        <table className=\"csv-table\">\n          <thead>\n          <tr>\n            {headers.map(header => (\n              <th>{header}</th>\n            ))}\n          </tr>\n          </thead>\n          <tbody>\n          <tr>\n            <td colSpan=\"5\" className=\"chapter\"><b>Характеристика комплекса информационно-вычислительных систем</b></td>\n          </tr>\n          {preferencesRows.map((row, index) => (\n            <tr key={index}>\n              <td>{index + 1}</td>\n              <td>{row.question}</td>\n              <td><input type=\"text\" value={row.lnpa}\n                         onChange={(e) => handleChange(index, 'lnpa', e.target.value, preferencesRows, setPreferencesRows)} />\n              </td>\n              <td><input type=\"text\" value={row.practical}\n                         onChange={(e) => handleChange(index, 'practical', e.target.value, preferencesRows, setPreferencesRows)} />\n              </td>\n              <td><input type=\"text\" value={row.note}\n                         onChange={(e) => handleChange(index, 'note', e.target.value, preferencesRows, setPreferencesRows)} />\n              </td>\n            </tr>\n          ))}\n          <tr>\n            <td colSpan=\"5\" className=\"chapter\"><b>Требования к структуре и функционированию системы защиты\n              информации</b></td>\n          </tr>\n          {initialRequirementsRows.map((row, index) => {\n              const i = initialPreferencesRows.length + index + 1\n              return (\n                <tr key={i}>\n                  <td>{i}</td>\n                  <td>{row.question}</td>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={row.lnpa}\n                      onChange={(e) => handleChange(index, 'lnpa', e.target.checked, requirementsRows, setRequirementsRows)}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={row.practical}\n                      onChange={(e) => handleChange(index, 'practical', e.target.checked, requirementsRows, setRequirementsRows)}\n                    />\n                  </td>\n                  <td><input type=\"text\" value={row.note}\n                             onChange={(e) => handleChange(index, 'note', e.target.value, requirementsRows, setRequirementsRows)} />\n                  </td>\n                </tr>\n              )\n            }\n          )}\n          <tr>\n            <td colSpan=\"5\" className=\"chapter\"><b>Требования к надежности</b></td>\n          </tr>\n          {initialReliabilityRequirementsRows.map((row, index) => {\n              const i = initialPreferencesRows.length + initialRequirementsRows.length + index + 1\n              return (\n                <tr key={i}>\n                  <td>{i}</td>\n                  <td>{row.question}</td>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={row.lnpa}\n                      onChange={(e) => handleChange(index, 'lnpa', e.target.checked, reliabilityRequirementsRows, setReliabilityRequirementsRows)}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={row.practical}\n                      onChange={(e) => handleChange(index, 'practical', e.target.checked, reliabilityRequirementsRows, setReliabilityRequirementsRows)}\n                    />\n                  </td>\n                  <td><input type=\"text\" value={row.note}\n                             onChange={(e) => handleChange(index, 'note', e.target.value, reliabilityRequirementsRows, setReliabilityRequirementsRows)} />\n                  </td>\n                </tr>\n              )\n            }\n          )}\n          <tr>\n            <td colSpan=\"5\" className=\"chapter\"><b>Требования безопасности</b></td>\n          </tr>\n          {initialProtectionPreferencesRows.map((row, index) => {\n              const i = initialPreferencesRows.length + initialReliabilityRequirementsRows.length + initialRequirementsRows.length + index + 1\n              return (\n                <tr key={i}>\n                  <td>{i}</td>\n                  <td>{row.question}</td>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={row.lnpa}\n                      onChange={(e) => handleChange(index, 'lnpa', e.target.checked, preferencesProtectionRows, setProtectionPreferencesRows)}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={row.practical}\n                      onChange={(e) => handleChange(index, 'practical', e.target.checked, preferencesProtectionRows, setProtectionPreferencesRows)}\n                    />\n                  </td>\n                  <td><input type=\"text\" value={row.note}\n                             onChange={(e) => handleChange(index, 'note', e.target.value, preferencesProtectionRows, setProtectionPreferencesRows)} />\n                  </td>\n                </tr>\n              )\n            }\n          )}\n          <tr>\n            <td colSpan=\"5\" className=\"chapter\"><b>Требования к функциям (задачам), выполняемым системой защиты\n              информации</b></td>\n          </tr>\n          {initialFunctionPreferencesRows.map((row, index) => {\n              const i = initialPreferencesRows.length + initialReliabilityRequirementsRows.length + initialRequirementsRows.length + initialProtectionPreferencesRows.length + index + 1\n              return (\n                <tr key={i}>\n                  <td>{i}</td>\n                  <td>{row.question}</td>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={row.lnpa}\n                      onChange={(e) => handleChange(index, 'lnpa', e.target.checked, preferencesFunctionsRows, setProtectionFunctionsRows)}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={row.practical}\n                      onChange={(e) => handleChange(index, 'practical', e.target.checked, preferencesFunctionsRows, setProtectionFunctionsRows)}\n                    />\n                  </td>\n                  <td><input type=\"text\" value={row.note}\n                             onChange={(e) => handleChange(index, 'note', e.target.value, preferencesFunctionsRows, setProtectionFunctionsRows)} />\n                  </td>\n                </tr>\n              )\n            }\n          )}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"buttons\">\n        <button onClick={() => createReport()}>Сохранить ответ</button>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default CollectQuestionnaireData;\n","/Users/enigma/WebstormProjects/react-electron/src/components/Test/components/collectComplianceOrdersData/index.js",["86","87"],"import React, { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { downloadCsv } from '../../../../helpers/downloadCSV.helper';\n\nconst headers = ['№', 'Вопросы, подлежащие проверке', 'Основание (норма)', 'Закрепление в ЛНПА', 'Вид, дата, регистрационный номер документа', 'Наличие практического выполнения']\n\nconst initialOrderOneRows = [\n  {\n    number: '1.1',\n    question: 'Наличие подразделения защиты информации или иного подразделения (должностного лица), ответственным за обеспечение защиты информации',\n    grounds: 'п. 4',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.2',\n    question: 'Работники такого подразделения (должностное лицо) должны иметь высшее образование в области защиты информации либо высшее или профессионально-техническое образование и пройти переподготовку или повышение квалификации по вопросам технической и криптографической защиты информации в порядке, установленном законодательством',\n    grounds: 'п. 4',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.3',\n    question: 'Наличие технического задания (далее – ТЗ) на создание информационной системы (далее – ИС), включающего перечень работ по проектированию и созданию системы защиты информации (далее – СЗИ), или ТЗ на создание СЗИ.',\n    grounds: 'п. 6',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.3.1',\n    question: 'Определено ли в ТЗ наименование ИС с указанием присвоенного ей класса типовых ИС',\n    grounds: 'п. 10',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.3.2',\n    question: 'Определены ли в ТЗ требования к системе защиты информации (далее - СЗИ)',\n    grounds: 'п. 10',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.3.3',\n    question: 'Имеются ли в ТЗ сведения об организации взаимодействия (при его наличии) с иными ИС ',\n    grounds: 'п. 10',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.3.4',\n    question: 'Определены ли в ТЗ требования к средствам криптографической защиты информации (далее – СКЗИ)',\n    grounds: 'п. 10',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.4',\n    question: 'Проведено ли категорирование информации, которая будет обрабатываться в ИС',\n    grounds: 'п. 7',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.5',\n    question: 'Наличие акта отнесения ИС к классу типовых ИС',\n    grounds: 'п. 7',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.6',\n    question: 'Наличие политики информационной безопасности (далее – ИБ) организации',\n    grounds: 'п. 8',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.6.1',\n    question: 'Определены ли в политике ИБ цели и принципы защиты информации',\n    grounds: 'п. 9',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.6.2',\n    question: 'Определены ли в политике ИБ перечень ИС, с указанием  их классов и подразделения защиты информации.',\n    grounds: 'п. 9',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.6.3',\n    question: 'Определены ли в политике ИБ обязанности пользователей ИС',\n    grounds: 'п. 9',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.6.4',\n    question: 'Определен ли в политике ИБ порядок взаимодействия с иными ИС',\n    grounds: 'п. 9',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.7',\n    question: 'Наличие общей схемы СЗИ',\n    grounds: 'п. 8',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.7.1',\n    question: 'Наличие на общей схеме СЗИ наименования ИС',\n    grounds: 'п. 11',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.7.2',\n    question: 'Наличие на общей схеме СЗИ класс типовых ИС',\n    grounds: 'п. 11',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.7.3',\n    question: 'Определение на общей схеме СЗИ физических границ ИС',\n    grounds: 'п. 11',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.7.4',\n    question: 'Отражение на общей схеме СЗИ внешних и внутренних информационных потоков ',\n    grounds: 'п. 11',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.7.5',\n    question: 'Отражение на общей  схеме СЗИ протоколов обмена защищаемой информацией',\n    grounds: 'п. 11',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.8',\n    question: 'Наличие документации на СЗИ',\n    grounds: 'п. 17',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.8.1',\n    question: 'Способ разграничения доступа пользователей к объектам ИС',\n    grounds: 'п. 17',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.8.2',\n    question: 'Порядок резервирования и уничтожения информации',\n    grounds: 'п. 17',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.8.3',\n    question: 'Порядок защиты от вредоносного программного обеспечения',\n    grounds: 'п. 17',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.8.4',\n    question: 'Порядок использования съемных носителей информации',\n    grounds: 'п. 17',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.8.5',\n    question: 'Порядок использования электронной почты',\n    grounds: 'п. 17',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.8.6',\n    question: 'Порядок обновления средств защиты информации',\n    grounds: 'п. 17',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.8.7',\n    question: 'Порядок осуществления контроля (мониторинга) за функционированием ИС и СЗИ',\n    grounds: 'п. 17',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.8.8',\n    question: 'Порядок реагирования на события ИБ и ликвидации их последствий',\n    grounds: 'п. 17',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.8.9',\n    question: 'Порядок Порядок управления криптографическими ключами, в том числе требования по их генерации, распределению, хранению, доступу к ним и их уничтожению',\n    grounds: 'п. 17',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.9',\n    question: 'Доведены ли организационные меры по защите информации до сведения пользователей ИС под роспись',\n    grounds: 'п. 1.19',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.10',\n    question: 'Осуществляется ли контроль за соблюдением требований, установленных в нормативных правовых актах, документации на СЗИ',\n    grounds: 'п. 20',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.11',\n    grounds: 'п. 20',\n    question: 'Осуществляется ли контроль за порядком использования объектов ИС',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.12',\n    grounds: 'п. 20',\n    question: 'Осуществляется ли мониторинг функционирования СЗИ',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.13',\n    grounds: 'п. 20',\n    question: 'Осуществляется ли выявление угроз (анализ журналов аудита), которые могут привести к сбоям, нарушению функционирования ИС',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.14',\n    question: 'Осуществляется ли резервное копирование информации, содержащейся в ИС',\n    grounds: 'п. 20',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '1.15',\n    question: 'Проводится ли обучение (повышение квалификации) пользователей ИС',\n    grounds: 'п. 20',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n]\n\nconst initialOrderSecondRows = [\n  {\n    number: '2.1',\n    question: 'Наличие копий сертификатов соответствия либо экспертных заключений на средства защиты информации',\n    grounds: '',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '2.2',\n    question: 'Наличие программы и методики аттестации ИС',\n    grounds: '',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '2.3',\n    question: 'Правильность отнесения ИС к классу типовых ИС, выбора и применения средств защиты информации',\n    grounds: '',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '2.4',\n    question: 'Наличие протокола испытаний СЗИ на предмет выполнения установленных законодательством требований по защите информации',\n    grounds: '',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '2.5',\n    question: 'Документальное подтверждение проведения внешней и внутренней проверки отсутствия либо невозможности использования нарушителем свойств программных, программно-аппаратных и аппаратных средств',\n    grounds: '',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '2.6',\n    question: 'Наличие технического отчета ',\n    grounds: '',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '2.7',\n    question: 'Наличие аттестата соответствия СЗИ',\n    grounds: '',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '2.8',\n    question: 'Введение ИС с аттестованной СЗИ в эксплуатацию ',\n    grounds: '',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n]\n\nconst initialOrderThirdRows = [\n  {\n    number: '3.1',\n    question: 'Представлены ли сведения в ОАЦ',\n    grounds: 'п. 4',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n]\n\nconst initialOrderForthRows = [\n  {\n    number: '4.1',\n    question: 'Выполнены ли требования к СЗИ, определенные  в ТЗ, а также с учетом ограничений, указанных в сертификатах соответствия.',\n    grounds: 'п. 10, п. 16',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '4.2',\n    question: 'Применение средств криптографической защиты информации в порядке определенном в ТЗ',\n    grounds: 'п. 10',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n  {\n    number: '4.3',\n    question: 'Осуществлена ли смена реквизитов доступа к функциям управления и настройкам, установленным по умолчанию, либо блокировка учетных записей, не предусматривающих смену указанных реквизитов',\n    grounds: 'п. 16',\n    pinning: false,\n    regNumber: '',\n    execution: false\n  },\n]\n\nconst CollectComplianceOrdersData = () => {\n  const [orderOneRows, setOrderOneRows] = useState(initialOrderOneRows);\n  const [orderSecondRows, setOrderSecondRows] = useState(initialOrderSecondRows);\n  const [orderThirdRows, setOrderThirdRows] = useState(initialOrderThirdRows);\n  const [orderForthRows, setOrderForthRows] = useState(initialOrderForthRows);\n\n\n  const handleChange = (index, column, value, state, setState) => {\n    const newRows = [...state];\n    newRows[index][column] = value;\n    setState(newRows);\n  };\n\n  const createReport = () => {\n    const data = [...orderOneRows, ...orderSecondRows, ...orderThirdRows, ...orderForthRows];\n    const recomendationsData = data.filter(elem => (!elem.pinning && !elem.execution) || (!elem.pinning && elem.execution) || (elem.pinning && !elem.execution) ).map((elem, index) => ({ number: elem.number, question: elem.question, recomendation: '', note: elem.grounds }))\n    downloadCsv([], recomendationsData, 'compliance_data.csv').then(data => {\n      return true;\n    })\n  }\n\n  return (\n    <div className=\"csv-table-container full-width-table\">\n      <div className=\"csv-table-wrapper\">\n        <table className=\"csv-table\">\n          <thead>\n          <tr>\n            {headers.map(header => (\n              <th>{header}</th>\n            ))}\n          </tr>\n          </thead>\n          <tbody>\n          <tr>\n            <td colSpan=\"1\" className=\"chapter\"><b>I</b></td>\n            <td colSpan=\"5\" className=\"chapter\"><b>Организационные мероприятия</b></td>\n          </tr>\n          <tr>\n            <td colSpan=\"6\" className=\"chapter\"><h5 style={{ textAlign: 'center' }}><b>Приказ № 66 от 20 февраля 2020\n              г.</b></h5></td>\n          </tr>\n          <tr>\n            <td colSpan=\"1\" className=\"chapter\"><b>1</b></td>\n            <td colSpan=\"6\" className=\"chapter\"><h5 style={{ textAlign: 'center' }}><b>Положение о порядке технической и\n              криптографической защиты информации\n              в информационных системах, предназначенных для обработки информации, распространение и (или)\n              предоставление которой ограничено\n            </b></h5></td>\n          </tr>\n          {orderOneRows.map((row, index) => (\n            <tr key={index}>\n              <td>{row.number}</td>\n              <td>{row.question}</td>\n              <td>{row.grounds}</td>\n              <td><input type=\"checkbox\" value={row.pinning}\n                         onChange={(e) => handleChange(index, 'practical', e.target.value, orderOneRows, setOrderOneRows)} />\n              </td>\n              <td><input type=\"text\" value={row.regNumber}\n                         onChange={(e) => handleChange(index, 'note', e.target.value, orderOneRows, setOrderOneRows)} />\n              </td>\n              <td><input type=\"checkbox\" value={row.execution}\n                         onChange={(e) => handleChange(index, 'note', e.target.value, orderOneRows, setOrderOneRows)} />\n              </td>\n            </tr>\n          ))}\n          <tr>\n            <td colSpan=\"1\" className=\"chapter\"><b>2</b></td>\n            <td colSpan=\"6\" className=\"chapter\"><h5 style={{ textAlign: 'center' }}><b>Положение о порядке аттестации\n              систем защиты информации информационных систем, предназначенных для обработки информации, распространение\n              и (или) предоставление которой ограничено</b></h5></td>\n          </tr>\n          {orderSecondRows.map((row, index) => (\n            <tr key={index}>\n              <td>{row.number}</td>\n              <td>{row.question}</td>\n              <td>{row.grounds}</td>\n              <td><input type=\"checkbox\" value={row.pinning}\n                         onChange={(e) => handleChange(index, 'practical', e.target.value, orderSecondRows, setOrderSecondRows)} />\n              </td>\n              <td><input type=\"text\" value={row.regNumber}\n                         onChange={(e) => handleChange(index, 'note', e.target.value, orderSecondRows, setOrderSecondRows)} />\n              </td>\n              <td><input type=\"checkbox\" value={row.execution}\n                         onChange={(e) => handleChange(index, 'note', e.target.value, orderSecondRows, setOrderSecondRows)} />\n              </td>\n            </tr>\n          ))}\n          <tr>\n            <td colSpan=\"1\" className=\"chapter\"><b>3</b></td>\n            <td colSpan=\"6\" className=\"chapter\"><h5 style={{ textAlign: 'center' }}><b>Положение о порядке представления\n              в Оперативно-аналитический центр при Президенте Республики Беларусь сведений о событиях информационной\n              безопасности, состоянии технической и криптографической защиты информации</b></h5></td>\n          </tr>\n          {orderThirdRows.map((row, index) => (\n            <tr key={index}>\n              <td>{row.number}</td>\n              <td>{row.question}</td>\n              <td>{row.grounds}</td>\n              <td><input type=\"checkbox\" value={row.pinning}\n                         onChange={(e) => handleChange(index, 'practical', e.target.value, orderSecondRows, setOrderSecondRows)} />\n              </td>\n              <td><input type=\"text\" value={row.regNumber}\n                         onChange={(e) => handleChange(index, 'note', e.target.value, orderSecondRows, setOrderSecondRows)} />\n              </td>\n              <td><input type=\"checkbox\" value={row.execution}\n                         onChange={(e) => handleChange(index, 'note', e.target.value, orderSecondRows, setOrderSecondRows)} />\n              </td>\n            </tr>\n          ))}\n          <tr>\n            <td colSpan=\"1\" className=\"chapter\"><b>II</b></td>\n            <td colSpan=\"6\" className=\"chapter\"><h5 style={{ textAlign: 'center' }}><b>Технические мероприяти</b></h5>\n            </td>\n          </tr>\n          <tr>\n            <td colSpan=\"1\" className=\"chapter\"><b></b></td>\n            <td colSpan=\"6\" className=\"chapter\"><h5 style={{ textAlign: 'center' }}><b>Приказ № 66 от 20 февраля 2020\n              г.</b></h5></td>\n          </tr>\n          <tr>\n            <td colSpan=\"1\" className=\"chapter\"><b>4</b></td>\n            <td colSpan=\"6\" className=\"chapter\"><h5 style={{ textAlign: 'center' }}><b>Положение о порядке технической и\n              криптографической защиты информации в информационных системах, предназначенных для обработки информации,\n              распространение и (или) предоставление которой ограничено</b></h5></td>\n          </tr>\n          {orderForthRows.map((row, index) => (\n            <tr key={index}>\n              <td>{row.number}</td>\n              <td>{row.question}</td>\n              <td>{row.grounds}</td>\n              <td><input type=\"checkbox\" value={row.pinning}\n                         onChange={(e) => handleChange(index, 'practical', e.target.value, orderSecondRows, setOrderSecondRows)} />\n              </td>\n              <td><input type=\"text\" value={row.regNumber}\n                         onChange={(e) => handleChange(index, 'note', e.target.value, orderSecondRows, setOrderSecondRows)} />\n              </td>\n              <td><input type=\"checkbox\" value={row.execution}\n                         onChange={(e) => handleChange(index, 'note', e.target.value, orderSecondRows, setOrderSecondRows)} />\n              </td>\n            </tr>\n          ))}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"buttons\">\n        <button onClick={() => createReport()}>Сохранить ответ</button>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default CollectComplianceOrdersData;\n","/Users/enigma/WebstormProjects/react-electron/src/components/Test/components/collectRequirementsData/index.js",[],"/Users/enigma/WebstormProjects/react-electron/src/helpers/checkFileExist.helper.js",[],"/Users/enigma/WebstormProjects/react-electron/src/helpers/readFile.helper.js",[],{"ruleId":"88","severity":1,"message":"89","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":14},{"ruleId":"88","severity":1,"message":"92","line":15,"column":10,"nodeType":"90","messageId":"91","endLine":15,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":14},{"ruleId":"88","severity":1,"message":"93","line":1,"column":8,"nodeType":"90","messageId":"91","endLine":1,"endColumn":13},{"ruleId":"88","severity":1,"message":"94","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},{"ruleId":"88","severity":1,"message":"95","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":24},{"ruleId":"88","severity":1,"message":"96","line":414,"column":26,"nodeType":"90","messageId":"91","endLine":414,"endColumn":43},{"ruleId":"88","severity":1,"message":"97","line":415,"column":26,"nodeType":"90","messageId":"91","endLine":415,"endColumn":43},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'problemsReport' is assigned a value but never used.","'React' is defined but never used.","'useState' is defined but never used.","'createWordFile' is defined but never used.","'setOrderThirdRows' is assigned a value but never used.","'setOrderForthRows' is assigned a value but never used."]